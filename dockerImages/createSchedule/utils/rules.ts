export const rules = `lunch(L) :- L=1..3.boolean(true).boolean(false).startTime(7).startTime(11).endTime(3).endTime(5).endTime(7).endTime(11).cors(ent). cors(ct). cors(gengyn). cors(peds). cors(neuro). cors(pu). cors(ortho). cors(all).cors(robotics).cors(ophthalmology).cors(bronc).{cover(P1, P2, L): shift(P1, ST1, D1), P1 != P2, L=1..3 } = 1 :- shift(P2, 7, D2).:- cover(P1, P2, Lunch), specialty(P2, S), {cors(P1, S)} = 0, {cors(P1, all)} = 0.:- cover(P1, P2, L), cover(P1, P3, L), P2!=P3.:- cover(P1, P2, L), cover(P2, P3, L).:- cover(P1, P2, L), isTech(P1, true), isTech(P2, false).penalty(P, 5) :- shift(P, 7, 3), cover(C, P, 3).penalty(P, 2) :- shift(P, 7, 3), cover(C, P, 2).penalty(P, 100) :- shift(P, 7, 5), cover(C, P, 1).penalty(P, 4) :- shift(P, 7, 5), cover(C, P, 3).penalty(P, 1000) :- shift(P, 7, 7), cover(C, P, 1).penalty(P, 7) :- shift(P, 7, 7), cover(C, P, 2).penalty(P2, 100000) :- shift(P1, 7, D1), cover(P2, P1, L), shift(P2, 7, D2).totalPenalty(TP) :- TP = #sum{Penality, Person : penalty(Person, Penality)}.#minimize{TP:totalPenalty(TP)}.#show penalty/2.#show cover/3.`;
